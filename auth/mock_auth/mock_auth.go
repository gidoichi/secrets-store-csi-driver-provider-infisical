// Code generated by MockGen. DO NOT EDIT.
// Source: auth.go
//
// Generated by this command:
//
//	mockgen -destination=mock_auth/mock_auth.go -source=auth.go
//

// Package mock_auth is a generated GoMock package.
package mock_auth

import (
	context "context"
	reflect "reflect"

	auth "github.com/gidoichi/secrets-store-csi-driver-provider-infisical/auth"
	gomock "go.uber.org/mock/gomock"
	types "k8s.io/apimachinery/pkg/types"
)

// MockAuth is a mock of Auth interface.
type MockAuth struct {
	ctrl     *gomock.Controller
	recorder *MockAuthMockRecorder
}

// MockAuthMockRecorder is the mock recorder for MockAuth.
type MockAuthMockRecorder struct {
	mock *MockAuth
}

// NewMockAuth creates a new mock instance.
func NewMockAuth(ctrl *gomock.Controller) *MockAuth {
	mock := &MockAuth{ctrl: ctrl}
	mock.recorder = &MockAuthMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAuth) EXPECT() *MockAuthMockRecorder {
	return m.recorder
}

// TokenFromKubeSecret mocks base method.
func (m *MockAuth) TokenFromKubeSecret(ctx context.Context, secretRef types.NamespacedName) (*auth.Credentials, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TokenFromKubeSecret", ctx, secretRef)
	ret0, _ := ret[0].(*auth.Credentials)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TokenFromKubeSecret indicates an expected call of TokenFromKubeSecret.
func (mr *MockAuthMockRecorder) TokenFromKubeSecret(ctx, secretRef any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TokenFromKubeSecret", reflect.TypeOf((*MockAuth)(nil).TokenFromKubeSecret), ctx, secretRef)
}
